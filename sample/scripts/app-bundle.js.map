{"version":3,"sources":["src/random-number-generator.ts","src/navbar/navbar.ts","src/main.ts","src/json-schema.ts","src/json-form.ts","src/environment.ts","src/app.ts"],"names":[],"mappings":"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","file":"app-bundle.js","sourcesContent":["import { bindable } from \"aurelia-framework\";\nimport { IJsonSchemaDefinition } from \"aurelia-json-schema-form\";\n\nexport class RandomNumberGenerator {\n  @bindable schema: IJsonSchemaDefinition;\n  @bindable model: number;\n\n  bind() {\n    console.log(\"random-number-generator\", { schema: this.schema, model: this.model });\n  }\n\n  generate() {\n    this.model = Math.random();\n  }\n}\n","import { bindable, DOM } from \"aurelia-framework\";\n\nexport class Navbar {\n  themes = [\n    \"cerulean\",\n    \"cosmo\",\n    \"cyborg\",\n    \"darkly\",\n    \"flatly\",\n    \"journal\",\n    \"litera\",\n    \"lumen\",\n    \"lux\",\n    \"materia\",\n    \"minty\",\n    \"pulse\",\n    \"sandstone\",\n    \"simplex\",\n    \"sketchy\",\n    \"slate\",\n    \"solar\",\n    \"spacelab\",\n    \"superhero\",\n    \"united\",\n    \"yeti\"\n  ];\n\n  current: string = \"minty\";\n\n  themeSelected(theme) {\n    this.current = theme;\n    DOM\n      .getElementById('linkStylesheet')\n      .setAttribute(\"href\", `css/${theme}/bootstrap.min.css`);\n  }\n}\n","import { AureliaValidationConfiguration } from \"aurelia-validation\";\nimport { PluginOptions } from \"aurelia-json-schema-form\";\nimport { ConsoleAppender } from \"aurelia-logging-console\";\nimport { Aurelia, LogManager } from \"aurelia-framework\";\nimport { logLevel } from \"aurelia-logging\";\nimport { PLATFORM } from \"aurelia-pal\";\nimport environment from \"./environment\";\nimport \"bootstrap\";\nimport $ from \"jquery\";\nimport * as bluebird from \"bluebird\";\n\n(<any>Promise).config({\n  longStackTraces: false,  // <----- I added this.\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia: Aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .plugin(PLATFORM.moduleName(\"aurelia-validation\"));\n\n  LogManager.addAppender(new ConsoleAppender());\n  aurelia.use\n    .plugin(PLATFORM.moduleName(\"aurelia-json-schema-form\"), (options: PluginOptions) => {\n      options.logLevel = logLevel.debug;\n    })\n    .globalResources([\n      PLATFORM.moduleName(\"./random-number-generator\")\n    ]);\n\n  // Uncomment the line below to enable animation.\n  // aurelia.use.plugin(PLATFORM.moduleName('aurelia-animator-css'));\n  // if the css animator is enabled, add swap-order=\"after\" to all router-view elements\n\n  // Anyone wanting to use HTMLImports to load views, will need to install the following plugin.\n  // aurelia.use.plugin(PLATFORM.moduleName(\"aurelia-html-import-template-loader\"));\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin(PLATFORM.moduleName(\"aurelia-testing\"));\n  }\n\n  aurelia.start().then(() => aurelia.setRoot(PLATFORM.moduleName(\"app\")));\n}\n","import { IJsonSchemaDefinition } from \"aurelia-json-schema-form\";\n\nexport const schema: IJsonSchemaDefinition = {\n  type: \"object\",\n  properties: {\n    firstName: {\n      type: \"string\",\n      minLength: 3\n    },\n    lastName: {\n      type: \"string\",\n      minLength: 3\n    },\n    hiddenPropertyWithDefault: {\n      type: \"string\",\n      default: \"I'm hidden but still populating the model!\"\n    },\n    foodAllergies: {\n      type: \"array\",\n      minItems: 1,\n      items: {\n        type: \"string\",\n        enum: [\n          \"peanuts\",\n          \"shellfish\",\n          \"egg\",\n          \"milk\"\n        ]\n      }\n    },\n    averageDailyCoffeeConsumption: {\n      type: \"number\",\n      description: \"probably not enough\",\n      minimum: 0,\n      exclusiveMaximum: 20\n    },\n    favoritePet: {\n      type: \"string\",\n      enum: [\n        \"Dogs\",\n        \"Cats\",\n        \"Goldfish\"\n      ]\n    },\n    termsOfService: {\n      type: \"boolean\",\n      description: \"By checking this box, blah blah\"\n    },\n    phoneNumbers: {\n      type: \"array\",\n      minItems: 1,\n      maxItems: 3,\n      items: {\n        type: \"string\",\n        title: \"Phone number\",\n        pattern: \"^(\\\\d{3}-\\\\d{3}-\\\\d{4})|(\\\\d{10})$\"\n      }\n    },\n    address: {\n      type: \"object\",\n      properties: {\n        street: {\n          type: \"string\"\n        },\n        city: {\n          type: \"string\"\n        },\n        state: {\n          type: \"string\",\n          enum: [\n            \"Alabama\",\n            \"Alaska\",\n            \"American Samoa\",\n            \"Arizona\",\n            \"Arkansas\",\n            \"California\",\n            \"Colorado\",\n            \"Connecticut\",\n            \"Delaware\",\n            \"District Of Columbia\",\n            \"Federated States Of Micronesia\",\n            \"Florida\",\n            \"Georgia\",\n            \"Guam\",\n            \"Hawaii\",\n            \"Idaho\",\n            \"Illinois\",\n            \"Indiana\",\n            \"Iowa\",\n            \"Kansas\",\n            \"Kentucky\",\n            \"Louisiana\",\n            \"Maine\",\n            \"Marshall Islands\",\n            \"Maryland\",\n            \"Massachusetts\",\n            \"Michigan\",\n            \"Minnesota\",\n            \"Mississippi\",\n            \"Missouri\",\n            \"Montana\",\n            \"Nebraska\",\n            \"Nevada\",\n            \"New Hampshire\",\n            \"New Jersey\",\n            \"New Mexico\",\n            \"New York\",\n            \"North Carolina\",\n            \"North Dakota\",\n            \"Northern Mariana Islands\",\n            \"Ohio\",\n            \"Oklahoma\",\n            \"Oregon\",\n            \"Palau\",\n            \"Pennsylvania\",\n            \"Puerto Rico\",\n            \"Rhode Island\",\n            \"South Carolina\",\n            \"South Dakota\",\n            \"Tennessee\",\n            \"Texas\",\n            \"Utah\",\n            \"Vermont\",\n            \"Virgin Islands\",\n            \"Virginia\",\n            \"Washington\",\n            \"West Virginia\",\n            \"Wisconsin\",\n            \"Wyoming\"\n          ]\n        },\n        zip: {\n          type: \"number\",\n          minimum: 10000,\n          maximum: 99999\n        },\n        country: {\n          type: \"string\",\n          const: \"United States of America\"\n        }\n      },\n      required: [\n        \"street\",\n        \"city\",\n        \"state\",\n        \"zip\"\n      ]\n    },\n    references: {\n      type: \"array\",\n      items: {\n        type: \"object\",\n        properties: {\n          name: {\n            type: \"string\"\n          },\n          relationship: {\n            type: \"string\",\n            default: \"manager\"\n          },\n          email: {\n            type: \"string\",\n            format: \"email\"\n          }\n        },\n        required: [\n          \"name\",\n          \"relationship\",\n          \"email\"\n        ]\n      }\n    },\n    random: {\n      type: \"number\"\n    }\n  },\n  required: [\n    \"firstName\",\n    \"lastName\",\n    \"averageDailyCoffeeConsumption\"\n  ]\n}\n","import { IFormOverride } from \"../../dist/commonjs/aurelia-json-schema-form\";\nimport { PLATFORM } from \"aurelia-pal\";\n\nexport const form: IFormOverride = {\n  \"@div.row\": [\n    {\n      \"@div.col\": [\n        {\n          firstName: {}\n        }\n      ]\n    },\n    {\n      \"@div.col\": [\n        {\n          lastName: {}\n        }\n      ]\n    }\n  ],\n  references: {\n    $arrayAsTabs: true,\n    $tabTitle: \"${model[$index].name || 'Item ' + ($index + 1)}\",\n    $arrayItem: {\n      $noTitle: true,\n      name: {},\n      relationship: {},\n      email: {},\n      $noSeparator: true\n    }\n  },\n  phoneNumbers: {\n    $noEmptyArrayInitialization: true,\n    $arrayItem: {\n      $required: true,\n      $noTitle: true\n    }\n  },\n  favoritePet: {},\n  foodAllergies: {\n    $noSeparator: true,\n    $arrayItem: {}\n  },\n  averageDailyCoffeeConsumption: {\n    //$step: 2\n  },\n  address: {\n    street: {},\n    \"@div.row\": [\n      {\n        \"@div.col\": [\n          {\n            city: {}\n          }\n        ]\n      },\n      {\n        \"@div.col\": [\n          {\n            state: {}\n          }\n        ]\n      },\n      {\n        \"@div.col\": [\n          {\n            country: {}\n          }\n        ]\n      },\n      {\n        \"@div.col-2\": [\n          {\n            zip: {\n              $altTemplate: \"aurelia-json-schema-form/templates/bootstrap4/inputs/sft-number.html\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  termsOfService: {},\n  _element: {\n    elementName: \"random-number-generator\",\n    schemaKey: \"random\"\n  },\n  $noSeparator: true\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","import { BindingSignaler } from \"aurelia-templating-resources\";\r\nimport { observable, inject, useShadowDOM, BindingEngine } from \"aurelia-framework\";\r\nimport { IFormOptions, IJsonSchemaDefinition, IFormOverride, AuJsonSchemaForm } from \"aurelia-json-schema-form\";\r\nimport { form } from \"./json-form\";\r\nimport { schema } from \"./json-schema\";\r\nimport { ValidateEvent, ControllerValidateResult } from \"aurelia-validation\";\r\n\r\n@useShadowDOM()\r\n@inject(BindingSignaler, BindingEngine)\r\nexport class App {\r\n  form: IFormOverride = form;\r\n\r\n  schema: IJsonSchemaDefinition = schema;\r\n\r\n  @observable formString: string = JSON.stringify(this.form, null, \"\\t\");\r\n\r\n  @observable schemaString: string = JSON.stringify(this.schema, null, \"\\t\");\r\n\r\n  formVisible: boolean = true;\r\n\r\n  formState: string;\r\n\r\n  schemaState: string;\r\n\r\n  modelString: string;\r\n\r\n  schemaform: AuJsonSchemaForm\r\n\r\n  options: IFormOptions = {\r\n    validateOnRender: true,\r\n    noEmptyArrayInitialization: false\r\n  }\r\n\r\n  model: any = {\r\n    foodAllergies: [\r\n      \"egg\"\r\n    ],\r\n    averageDailyCoffeeConsumption: 1\r\n  };\r\n\r\n  constructor(private signaler: BindingSignaler, private engine: BindingEngine) { }\r\n\r\n  attached() {\r\n    this.refreshModel();\r\n    this.schemaform.validationController.subscribe((event: ValidateEvent) => {\r\n      this.refreshModel();\r\n    });\r\n  }\r\n\r\n  formStringChanged(newValue, oldValue) {\r\n    if (!oldValue) { return; }\r\n    try {\r\n      const obj = JSON.parse(newValue);\r\n      this.form = obj;\r\n      this.formState = undefined;\r\n    } catch {\r\n      this.formState = \"invalid json\";\r\n    }\r\n  }\r\n\r\n  schemaStringChanged(newValue, oldValue) {\r\n    if (!oldValue) { return; }\r\n    try {\r\n      const obj = JSON.parse(newValue);\r\n      this.schema = obj;\r\n      this.schemaState = undefined;\r\n    } catch {\r\n      this.schemaState = \"invalid json\";\r\n    }\r\n  }\r\n\r\n  refreshModel() {\r\n    this.modelString = JSON.stringify(this.model, null, \"\\t\");\r\n  }\r\n\r\n  async submit($event: Event) {\r\n    $event.preventDefault();\r\n    const results = await this.schemaform.formInstance.formController.validationController.validate();\r\n    if (results.valid) {\r\n      window.alert(\"everything looks good!\");\r\n    } else {\r\n      window.alert(\"one or more errors: \\r\\n\" + results.results.filter((r) => !r.valid).map((r) => r.message).join(\"\\r\\n\"));\r\n    }\r\n  }\r\n\r\n  reload() {\r\n    this.schemaform.buildForm();\r\n  }\r\n}\r\n"],"sourceRoot":".."}