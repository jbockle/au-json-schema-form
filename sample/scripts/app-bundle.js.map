{"version":3,"sources":["src/main.ts","src/environment.ts","src/app.ts"],"names":[],"mappings":"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","file":"app-bundle.js","sourcesContent":["import { PLATFORM } from \"aurelia-pal\";\n/// <reference types=\"aurelia-loader-webpack/src/webpack-hot-interface\"/>\n// we want font-awesome to load as soon as possible to show the fa-spinner\nimport { Aurelia, LogManager } from \"aurelia-framework\";\nimport \"bootstrap\";\nimport environment from \"./environment\";\nimport { ISchemaFormConfiguration } from \"aurelia-json-schema-form\";\nimport { logLevel } from \"aurelia-logging\";\nimport { ConsoleAppender } from \"aurelia-logging-console\";\n\nexport function configure(aurelia: Aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .plugin(PLATFORM.moduleName(\"aurelia-validation\"));\n\n  LogManager.addAppender(new ConsoleAppender());\n  aurelia.use\n    .plugin(PLATFORM.moduleName(\"aurelia-json-schema-form\"), (options: ISchemaFormConfiguration) => {\n      options.logLevel = logLevel.debug;\n    });\n\n  // Uncomment the line below to enable animation.\n  // aurelia.use.plugin(PLATFORM.moduleName('aurelia-animator-css'));\n  // if the css animator is enabled, add swap-order=\"after\" to all router-view elements\n\n  // Anyone wanting to use HTMLImports to load views, will need to install the following plugin.\n  // aurelia.use.plugin(PLATFORM.moduleName(\"aurelia-html-import-template-loader\"));\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin(PLATFORM.moduleName(\"aurelia-testing\"));\n  }\n\n  aurelia.start().then(() => aurelia.setRoot(PLATFORM.moduleName(\"app\")));\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","import { BindingSignaler } from \"aurelia-templating-resources\";\nimport { observable, inject, useShadowDOM } from \"aurelia-framework\";\n\n@useShadowDOM()\n@inject(BindingSignaler)\nexport class App {\n\n  form = {\n    firstName: {\n      $title: \"Given name\"\n    },\n    lastName: {\n      $placeholder: \"Last name\"\n    },\n    age: {\n      \"!widget\": \"alt-number\"\n    },\n    phoneNumbers: {},\n    addresses: {\n      \"street\": {},\n      \"@div.row\": [\n        {\n          \"@div.col\": [\n            {\n              city: {}\n            }\n          ]\n        },\n        {\n          \"@div.col\": [\n            {\n              state: {}\n            }\n          ]\n        },\n        {\n          \"@div.col-2\": [\n            {\n              zip: {\n                $readOnly: true\n              }\n            }\n          ]\n        }\n      ]\n    }\n  };\n  schema = {\n    type: \"object\",\n    properties: {\n      firstName: {\n        type: \"string\",\n        pattern: \"^j\",\n        minLength: 2\n      },\n      lastName: {\n        type: \"string\",\n        minLength: 3\n      },\n      age: {\n        type: \"number\",\n        minimum: 1\n      },\n      phoneNumbers: {\n        type: \"array\",\n        items: {\n          type: \"string\",\n          pattern: \"^(\\\\d{3}-\\\\d{3}-\\\\d{4})|(\\\\d{10})$\"\n        }\n      },\n      addresses: {\n        type: \"array\",\n        items: {\n          type: \"object\",\n          properties: {\n            street: {\n              type: \"string\"\n            },\n            city: {\n              type: \"string\"\n            },\n            state: {\n              type: \"string\"\n            },\n            zip: {\n              type: \"number\",\n              minimum: 10000,\n              maximum: 99999\n            },\n            country: {\n              type: \"string\",\n              const: \"USA\"\n            }\n          }\n        }\n      }\n    },\n    required: [\n      \"firstName\",\n      \"lastName\"\n    ]\n  };\n  @observable formString: string = JSON.stringify(this.form, null, \"\\t\");\n\n  @observable schemaString: string = JSON.stringify(this.schema, null, \"\\t\");\n\n  formState: string;\n\n  schemaState: string;\n\n  modelString: string;\n\n  model: any = {};\n  attached() {\n    this.refreshModel();\n  }\n  formStringChanged(newValue, oldValue) {\n    if (!oldValue) { return; }\n    try {\n      const obj = JSON.parse(newValue);\n      this.form = obj;\n      this.formState = undefined;\n    } catch {\n      this.formState = \"invalid json\";\n    }\n  }\n\n  schemaStringChanged(newValue, oldValue) {\n    if (!oldValue) { return; }\n    try {\n      const obj = JSON.parse(newValue);\n      this.schema = obj;\n      this.schemaState = undefined;\n    } catch {\n      this.schemaState = \"invalid json\";\n    }\n  }\n\n  refreshModel() {\n    this.modelString = JSON.stringify(this.model, null, \"\\t\");\n  }\n}\n"],"sourceRoot":".."}