System.register(["aurelia-validation", "aurelia-framework", "../services/schema-form-configuration"], function (exports_1, context_1) {
    "use strict";
    var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = (this && this.__metadata) || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var aurelia_validation_1, aurelia_framework_1, schema_form_configuration_1, StringRules;
    var __moduleName = context_1 && context_1.id;
    return {
        setters: [
            function (aurelia_validation_1_1) {
                aurelia_validation_1 = aurelia_validation_1_1;
            },
            function (aurelia_framework_1_1) {
                aurelia_framework_1 = aurelia_framework_1_1;
            },
            function (schema_form_configuration_1_1) {
                schema_form_configuration_1 = schema_form_configuration_1_1;
            }
        ],
        execute: function () {
            StringRules = /** @class */ (function () {
                function StringRules(configuration) {
                    this.configuration = configuration;
                }
                StringRules.prototype.register = function () {
                    this.add();
                    this.setCustomMessages();
                };
                StringRules.prototype.setCustomMessages = function () {
                    aurelia_validation_1.validationMessages["minLength"] = this.configuration.messages.minLength || aurelia_validation_1.validationMessages["minLength"];
                    aurelia_validation_1.validationMessages["maxLength"] = this.configuration.messages.maxLength || aurelia_validation_1.validationMessages["maxLength"];
                    aurelia_validation_1.validationMessages["matches"] = this.configuration.messages.pattern || aurelia_validation_1.validationMessages["matches"];
                    aurelia_validation_1.validationMessages["email"] = this.configuration.messages.format_email || aurelia_validation_1.validationMessages["email"];
                };
                StringRules.prototype.add = function () {
                    // format datetime
                    // tslint:disable-next-line:max-line-length
                    var iso8601Datetime = /^\d\d\d\d-[0-1]\d-[0-3]\d[t\s](?:[0-2]\d:[0-5]\d:[0-5]\d|23:59:60)(?:\.\d+)?(?:z|[+-]\d\d:\d\d)$/i;
                    aurelia_validation_1.ValidationRules
                        .customRule("format_datetime", function (val) { return val !== undefined ? iso8601Datetime.test(val) : true; }, this.configuration.messages.format_datetime || "${$displayName} is not a valid date/time.");
                    // format date
                    var iso8601Date = /^\d\d\d\d-[0-1]\d-[0-3]\d$/;
                    aurelia_validation_1.ValidationRules
                        .customRule("format_date", function (val) { return val !== undefined ? iso8601Date.test(val) : true; }, this.configuration.messages.format_date || "${$displayName} is not a valid date.");
                    // format time
                    var iso8601Time = /^(?:[0-2]\d:[0-5]\d:[0-5]\d|23:59:60)(?:\.\d+)?(?:z|[+-]\d\d:\d\d)?$/i;
                    aurelia_validation_1.ValidationRules
                        .customRule("format_time", function (val) { return val !== undefined ? iso8601Time.test(val) : true; }, this.configuration.messages.format_time || "${$displayName} is not a valid time.");
                    // format ipv4
                    var ipv4 = /^(?:(?:25[0-5]|2[0-4]\d|[01]?\d\d?)\.){3}(?:25[0-5]|2[0-4]\d|[01]?\d\d?)$/;
                    aurelia_validation_1.ValidationRules
                        .customRule("format_ipv4", function (val) { return val !== undefined ? ipv4.test(val) : true; }, this.configuration.messages.format_ipv4 || "${$displayName} is not a valid IPv4 address.");
                    // format ipv6
                    // tslint:disable-next-line:max-line-length
                    var ipv6 = /^\s*(?:(?:(?:[0-9a-f]{1,4}:){7}(?:[0-9a-f]{1,4}|:))|(?:(?:[0-9a-f]{1,4}:){6}(?::[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(?:\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(?:(?:[0-9a-f]{1,4}:){5}(?:(?:(?::[0-9a-f]{1,4}){1,2})|:(?:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(?:\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(?:(?:[0-9a-f]{1,4}:){4}(?:(?:(?::[0-9a-f]{1,4}){1,3})|(?:(?::[0-9a-f]{1,4})?:(?:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(?:\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){3}(?:(?:(?::[0-9a-f]{1,4}){1,4})|(?:(?::[0-9a-f]{1,4}){0,2}:(?:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(?:\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){2}(?:(?:(?::[0-9a-f]{1,4}){1,5})|(?:(?::[0-9a-f]{1,4}){0,3}:(?:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(?:\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){1}(?:(?:(?::[0-9a-f]{1,4}){1,6})|(?:(?::[0-9a-f]{1,4}){0,4}:(?:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(?:\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(?::(?:(?:(?::[0-9a-f]{1,4}){1,7})|(?:(?::[0-9a-f]{1,4}){0,5}:(?:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(?:\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:)))(?:%.+)?\s*$/i;
                    aurelia_validation_1.ValidationRules
                        .customRule("format_ipv6", function (val) { return val !== undefined ? ipv4.test(val) : true; }, this.configuration.messages.format_ipv6 || "${$displayName} is not a valid IPv6 address.");
                    // format hostname
                    var hostname = /^[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?(?:\.[a-z0-9](?:[-0-9a-z]{0,61}[0-9a-z])?)*$/i;
                    aurelia_validation_1.ValidationRules
                        .customRule("format_hostname", function (val) { return val !== undefined ? ipv4.test(val) : true; }, this.configuration.messages.format_hostname || "${$displayName} is not a valid hostname.");
                    // format uri
                    var uri = /^(?:[a-z][a-z0-9+-.]*:)(?:\/?\/)?[^\s]*$/i;
                    aurelia_validation_1.ValidationRules
                        .customRule("format_uri", function (val) { return val !== undefined ? uri.test(val) : true; }, this.configuration.messages.format_uri || "${$displayName} is not a valid URI.");
                    // pattern
                    aurelia_validation_1.ValidationRules
                        .customRule("pattern", function (val, obj, pattern) { return val !== undefined ? (new RegExp(pattern)).test(val) : true; }, this.configuration.messages.pattern || "${$displayName} is not correctly formatted.", function (pattern) { return ({ pattern: pattern }); });
                };
                StringRules.prototype.bind = function (ctrl, rule) {
                    if (ctrl.form.$schema.pattern) {
                        rule = rule.satisfiesRule("pattern", ctrl.form.$schema.pattern);
                    }
                    if (ctrl.form.$schema.minLength) {
                        rule = rule.minLength(ctrl.form.$schema.minLength);
                    }
                    if (ctrl.form.$schema.maxLength) {
                        rule = rule.maxLength(ctrl.form.$schema.maxLength);
                    }
                    if (ctrl.form.$schema.format && ctrl.form.$schema.format !== "email") {
                        var rulename = "format_" + ctrl.form.$schema.format.replace("-", "");
                        rule = rule.satisfiesRule(rulename);
                    }
                    if (ctrl.form.$schema.format === "email") {
                        rule = rule.email();
                    }
                };
                StringRules = __decorate([
                    aurelia_framework_1.inject(schema_form_configuration_1.SchemaFormConfiguration),
                    __metadata("design:paramtypes", [schema_form_configuration_1.SchemaFormConfiguration])
                ], StringRules);
                return StringRules;
            }());
            exports_1("StringRules", StringRules);
        }
    };
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,
